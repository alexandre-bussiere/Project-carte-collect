plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    // Incluez un repository local si vous avez empaqueté le service Protobuf en JAR
    // mavenLocal() ou une adresse de repository distant
}

dependencies {
<<<<<<< HEAD
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
=======
    // Dépendances Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Dépendances gRPC
    implementation project(':myServiceInterface')
    implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'
    // Autres dépendances de persistance ou de base de données
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    runtimeOnly 'com.h2database:h2'

    // Dépendances de test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
>>>>>>> dev_GRCP
}

tasks.named('test') {
    useJUnitPlatform()
}
